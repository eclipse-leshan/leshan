<?xml version="1.0" encoding="UTF-8"?>
<!--

Copyright (c) 2013-2015 Sierra Wireless and others.

All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v2.0
and Eclipse Distribution License v1.0 which accompany this distribution.

The Eclipse Public License is available at
   http://www.eclipse.org/legal/epl-v20.html
and the Eclipse Distribution License is available at
   http://www.eclipse.org/org/documents/edl-v10.html.

Contributors:
    Sierra Wireless - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" child.project.url.inherit.append.path="false" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.eclipse.leshan</groupId>
  <artifactId>leshan</artifactId>
  <version>2.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>leshan</name>
  <description>An OMA Lightweight M2M (LWM2M) implementation in Java</description>
  <url>http://eclipse.org/leshan</url>
  <licenses>
    <license>
      <name>EPL-2.0 OR BSD-3-Clause</name>
      <distribution>repo</distribution>
      <comments>Leshan is dual-licensed under the Eclipse Public License v2.0 and Eclipse Distribution License v1.0. A consumer can choose between that 2 licenses.</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>sbernard</id>
      <name>Simon Bernard</name>
      <email>sbernard@sierrawireless.com</email>
      <organization>Sierra Wireless</organization>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>msangoi</id>
      <name>Manuel Sangoi</name>
      <email>msangoi@sierrawireless.com</email>
      <organization>Sierra Wireless - AirVantage</organization>
      <organizationUrl>http://airvantage.net</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>khudalla</id>
      <name>Kai Hudalla</name>
      <email>kai.hudalla@bosch-si.com</email>
      <organization>Bosch Software Innovations GmbH</organization>
      <organizationUrl>http://www.bosch-si.com</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>jvermillard</id>
      <name>Julien Vermillard</name>
      <email>jvermillard@sierrawireless.com</email>
      <organization>Sierra Wireless - AirVantage</organization>
      <organizationUrl>http://airvantage.net</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <modules>
    <!-- library-->
    <module>leshan-lwm2m-core</module>
    <module>leshan-lwm2m-client</module>
    <module>leshan-lwm2m-servers-shared</module>
    <module>leshan-lwm2m-bsserver</module>
    <module>leshan-lwm2m-server</module>
    <module>leshan-lwm2m-server-redis</module>

    <!-- transport layer based on californium -->
    <module>leshan-tl-cf-shared</module>
    <module>leshan-tl-cf-bsserver-coap</module>
    <module>leshan-tl-cf-client-coap</module>
    <module>leshan-tl-cf-server-coap</module>
    <!-- transport layer based on californium oscore -->
    <module>leshan-tl-cf-shared-oscore</module>
    <module>leshan-tl-cf-bsserver-coap-oscore</module>
    <module>leshan-tl-cf-client-coap-oscore</module>
    <module>leshan-tl-cf-server-coap-oscore</module>

    <!-- transport layer based on java-coap -->
    <module>leshan-tl-jc-shared</module>
    <module>leshan-tl-jc-server-coap</module>
    <module>leshan-tl-jc-client-coap</module>
    <module>leshan-tl-jc-server-coaptcp</module>
    <module>leshan-tl-jc-client-coaptcp</module>

    <!--  integration tests -->
    <module>leshan-integration-tests</module>

    <!-- demos -->
    <module>leshan-demo-shared</module>
    <module>leshan-demo-client</module>
    <module>leshan-demo-servers-shared</module>
    <module>leshan-demo-server</module>
    <module>leshan-demo-bsserver</module>
  </modules>

  <scm child.scm.developerConnection.inherit.append.path="false" child.scm.url.inherit.append.path="false">
    <developerConnection>scm:git:ssh://git@github.com/eclipse/leshan.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/eclipse/leshan.git</url>
  </scm>

  <properties>
    <!-- configure encoding -->
    <leshan.encoding>UTF-8</leshan.encoding>
    <project.build.sourceEncoding>${leshan.encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${leshan.encoding}</project.reporting.outputEncoding>

    <!-- configure line separator -->
    <leshan.lineEnding>LF</leshan.lineEnding>
    <leshan.lineseparator>\n</leshan.lineseparator>

    <!-- we use properties for version when there are used more than once -->
    <!-- dependencies version -->
    <californium.version>4.0.0-M2</californium.version>
    <logback.version>1.3.15</logback.version>
    <javacoap.version>6.21.0</javacoap.version>
    <netty.version>4.1.115.Final</netty.version>
    <slf4j.api.version>2.0.16</slf4j.api.version>
    <jetty.version>12.0.14</jetty.version>
    <jackson.version>2.15.3</jackson.version>
    <picocli.version>4.7.5</picocli.version>
    <junit.version>5.10.1</junit.version>
    <!-- 
      For Mockito we are stucked to 4.x version because we need Java8 support
      See https://github.com/mockito/mockito/releases/tag/v5.0.0
    -->
    <mockito.version>4.11.0</mockito.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Leshan Libraries -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-lwm2m-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-lwm2m-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-lwm2m-servers-shared</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-lwm2m-bsserver</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-lwm2m-server</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-lwm2m-server-redis</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- transport layer based on Californium -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-cf-shared</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-cf-bsserver-coap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-cf-server-coap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-cf-client-coap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <!-- transport layer based on Californium OSCORE-->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-cf-shared-oscore</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-cf-bsserver-coap-oscore</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-cf-server-coap-oscore</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-cf-client-coap-oscore</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- transport layer based on java-coap -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-jc-shared</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-jc-server-coap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-jc-client-coap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-jc-server-coaptcp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-tl-jc-client-coaptcp</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- demo -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-demo-shared</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>leshan-demo-servers-shared</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Leshan library dependencies -->
      <!-- core -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.upokecenter</groupId>
        <artifactId>cbor</artifactId>
        <version>4.5.6</version>
      </dependency>
      <!-- redis -->
      <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>4.4.6</version>
      </dependency>
      <!-- californium -->
      <dependency>
        <groupId>org.eclipse.californium</groupId>
        <artifactId>californium-core</artifactId>
        <version>${californium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.californium</groupId>
        <artifactId>element-connector</artifactId>
        <version>${californium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.californium</groupId>
        <artifactId>scandium</artifactId>
        <version>${californium.version}</version>
      </dependency>
      <!-- java-coap -->
      <dependency>
        <groupId>io.github.open-coap</groupId>
        <artifactId>coap-core</artifactId>
        <version>${javacoap.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.open-coap</groupId>
        <artifactId>coap-tcp</artifactId>
        <version>${javacoap.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-handler</artifactId>
        <version>${netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-transport</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <!-- Demos, examples and tests dependencies -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <exclusions>
          <exclusion>
            <!-- we exclude servlet-api dependencies because of dependency convergence issue with jetty
            See: https://github.com/eclipse/leshan/issues/1339#issuecomment-1293221705 -->
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.15.0</version>
      </dependency>
      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli</artifactId>
        <version>${picocli.version}</version>
      </dependency>
      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli-shell-jline2</artifactId>
        <version>${picocli.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.ee10</groupId>
        <artifactId>jetty-ee10-webapp</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.ee10</groupId>
        <artifactId>jetty-ee10-servlets</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jmdns</groupId>
        <artifactId>jmdns</artifactId>
        <version>3.5.8</version>
      </dependency>

      <!-- test dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>2.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.24.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>nl.jqno.equalsverifier</groupId>
        <artifactId>equalsverifier</artifactId>
        <version>3.15.3</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- Bill Of Materials -->
  <!--
        Just contains list of maven plugin used. 
        Configuration should rather be placed at ./build-config/pom.xml.
        (Even if there is some exception which concern aggregator pom too)
    -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0</version>
          <!-- We do not deploy aggregator pom, this is overrided for child module  -->
          <executions>
            <execution>
              <id>default-deploy</id>
              <phase>none</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.12.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-toolchains-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.12.0</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.13</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.10.1</version>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.4.1</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.13.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>
          </configuration>
          <!-- This goal is used to configure eclipse, but we don't want to execute it on aggregator -->
          <executions>
            <execution>
              <id>configure-eclipse</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <inherited>false</inherited>
              <configuration>
                <skip>true</skip>
                <outputDirectory>nothing</outputDirectory>
                <resources></resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.5.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.3.1</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>10.12.4</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>net.revelc.code</groupId>
          <artifactId>impsort-maven-plugin</artifactId>
          <version>1.9.0</version>
          <dependencies>
            <!-- Needed because of maven 3.9.0 backward compatibility issue,
                 See : https://github.com/eclipse/leshan/issues/1410 -->
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-utils</artifactId>
              <version>3.5.1</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>net.revelc.code.formatter</groupId>
          <artifactId>formatter-maven-plugin</artifactId>
          <!-- stuck to 2.18, because higher version seems to detected bad formatting, 
               need to investigate before to upgrade -->
          <version>2.18.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>5.1.9</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-maven-plugin</artifactId>
          <version>1.23</version>
        </plugin>
        <plugin>
          <groupId>org.revapi</groupId>
          <artifactId>revapi-maven-plugin</artifactId>
          <version>0.15.0</version>
          <dependencies>
            <dependency>
              <groupId>org.revapi</groupId>
              <artifactId>revapi-java</artifactId>
              <version>0.28.1</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>wagon-maven-plugin</artifactId>
          <version>2.0.2</version>
        </plugin>
        <plugin>
          <groupId>org.cyclonedx</groupId>
          <artifactId>cyclonedx-maven-plugin</artifactId>
          <version>2.7.10</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <!--  One of the rare plugin which must be called on all module even Aggregator
                      because it must check formatting of all pom.xml file.
                      Must be called with -PallPom profile -->
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <configuration>
          <createBackupFile>false</createBackupFile>
          <lineSeparator>${leshan.lineseparator}</lineSeparator>
          <verifyFail>stop</verifyFail>
          <verifyFailOn>Strict</verifyFailOn>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>verify</goal>
            </goals>
            <!-- attach to process-sources to avoid flatten-maven-plugin interaction
                 with some maven plugin (E.g. maven-source-plugin or maven-javadoc-plugin)
                 See : https://github.com/Ekryd/sortpom/issues/229#issuecomment-1177872634 -->
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <rules>
            <requireUpperBoundDeps></requireUpperBoundDeps>
            <dependencyConvergence></dependencyConvergence>
            <requireJavaVersion>
              <version>17</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>3.6.0</version>
            </requireMavenVersion>
          </rules>
        </configuration>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>3.5.3</version>
      </extension>
    </extensions>
  </build>

  <profiles>
    <profile>
      <!-- Profile needed when shared config pom must be handled too 
                e.g. update version, check pom formatting ... -->
      <id>allPom</id>
      <modules>
        <module>build-config</module>
        <module>build-config/lib-build-config</module>
        <module>build-config/demo-build-config</module>
      </modules>
    </profile>
    <profile>
      <!-- By default the build, do lot of thing this profile is used mainly my CI to compile only -->
      <id>CompileOnly</id>
      <properties>
        <skipTests>true</skipTests>
        <skip.npm>true</skip.npm>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <animal.sniffer.skip>true</animal.sniffer.skip>
        <revapi.skip>true</revapi.skip>
        <formatter.skip>true</formatter.skip>
        <checkstyle.skip>true</checkstyle.skip>
        <impsort.skip>true</impsort.skip>
        <sort.skip>true</sort.skip>
      </properties>
    </profile>
    <profile>
      <!-- This profile launch tests with given jdk version using toolchain -->
      <id>useToolchain</id>
      <properties>
        <!-- Default value is minimal supported version, but another version can be used with : 
            mvn clean install -PuseToolchain -Dtoolchain.version=11
        -->
        <toolchain.version>1.8</toolchain.version>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <jdkToolchain>
                <version>${toolchain.version}</version>
              </jdkToolchain>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
