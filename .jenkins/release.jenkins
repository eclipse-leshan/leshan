pipeline {
  agent any
  parameters {
    string(
        name: 'BRANCH',
        defaultValue: 'master',
        description: 'The branch to build and release from. Examples: master, 1.x')
    string(
        name: 'RELEASE_VERSION',
        defaultValue: '2.0.0-M10',
        description: 'The version identifier to use for the artifacts built by this job. Examples: `2.0.0-M10`, `2.0.0-RC1`, `2.0.1`')
    string(
        name: 'NEXT_VERSION',
        defaultValue: '2.0.0-SNAPSHOT',
        description: 'The version identifier to use during development of the next version. Examples: 2.0.0-SNAPSHOT 2.1.0-SNAPSHOT')
  }
  tools {
    maven 'apache-maven-latest'
    jdk 'oracle-jdk8-latest'
  }
  options {
    timeout (time: 30, unit: 'MINUTES')
    buildDiscarder(logRotator(numToKeepStr: '3'))
  }
  stages {
    stage('Get Credentials') {
      steps {
        withCredentials([file(credentialsId: 'secret-subkeys.asc', variable: 'KEYRING')]) {
          sh '''gpg --batch --import "${KEYRING}"
                for fpr in $(gpg --list-keys --with-colons  | awk -F: \'/fpr:/ {print $10}\' | sort -u);
                do
                  echo -e "5\\ny\\n" |  gpg --batch --command-fd 0 --expert --edit-key $fpr trust;
                done
          '''
        }
      }
    }

    stage('Set release version') {
      steps {
        sh '''mvn versions:set -B -PallPom -f pom.xml -DnewVersion=${RELEASE_VERSION}'''
      }
    }

/*    stage('Build project') {
      steps {
        sh '''mvn clean install javadoc:javadoc -PeclipseJenkins -B -f pom.xml'''
      }
    }*/

    stage('Commit and tag release version') {
      steps {
        sshagent(['github-bot-ssh']) {
          sh '''shopt -s globstar
                git add **/pom.xml
                shopt -u globstar
                git config user.email "leshan-bot@eclipse.orgg"
                git config user.name "Leshan Bot"
                git commit -m "Bump version to ${RELEASE_VERSION}"
                git tag leshan-${RELEASE_VERSION} 
          '''
        }
      }
    }

    stage('Deploy new Release') {
      environment {
        MAVEN_OPTS = '-Dhttps.protocols=TLSv1.2'
      }
      steps {
        sh '''mvn clean deploy -Prelease -B -f pom.xml -DskipStagingRepositoryClose=true'''
      }
    }

    stage('Set post-release version') {
      steps {
        sh '''mvn versions:set -B -PallPom -f pom.xml -DnewVersion=${NEXT_VERSION}'''
      }
    }

    stage('Commit post-release version') {
      steps {
        sshagent(['github-bot-ssh']) {
          sh '''shopt -s globstar
                git add **/pom.xml
                shopt -u globstar
                git config user.email "leshan-bot@eclipse.orgg"
                git config user.name "Leshan Bot"
                git commit -m "Bump version to ${NEXT_VERSION}"
          '''
        }
      }
    }
  }
}
